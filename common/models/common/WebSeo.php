<?php

namespace common\models\common;

use common\enums\OrderFromEnum;
use common\models\order\Order;
use common\models\order\OrderTourist;
use Yii;

/**
 * This is the model class for table "{{%web_seo}}".
 *
 * @property int $id 主键
 * @property string $page_name 页面名称
 * @property string $route 页面名称
 * @property string $create_time 创建时间
 * @property string $update_time 修改时间
 *
 * @property string $platforms 平台
 * @property string $platform_10 平台
 * @property string $platform_11 平台
 * @property string $platform_20 平台
 * @property string $platform_21 平台
 * @property string $platform_30 平台
 * @property string $platform_31 平台
 * @property string $platform_40 平台
 * @property string $platform_41 平台
 */
class WebSeo extends \common\models\base\BaseModel
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%common_web_seo}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['page_name', 'route'], 'required'],
            [['page_name'], 'requiredPageName'],
            [['created_at', 'updated_at', 'platforms', 'platform_10'], 'safe'],
            [['page_name'], 'string', 'max' => 100],
            [['route'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => '主键',
            'page_name' => '页面',
            'route' => '路由',
            'created_at' => '创建时间',
            'updated_at' => '修改时间',

            'platforms' => '客户端',
            'platform_10' => '香港PC端',
            'platform_11' => '香港移动端',
            'platform_20' => '大陆PC端',
            'platform_21' => '大陆移动端',
            'platform_30' => '美国PC端',
            'platform_31' => '美国移动端',
            'platform_40' => '美国PC端',
            'platform_41' => '美国移动端',
        ];
    }

    public function beforeSave($insert)
    {
        $platforms = OrderFromEnum::getMap();

        //默认为零
        foreach ($platforms as $platform => $value) {
            $attribute = 'platform_' . $platform;
            $this->setAttribute($attribute, 0);
        }

        if(!empty($this->platforms) && is_array($this->platforms)) {
            foreach ($this->platforms as $platform) {
                $attribute = 'platform_' . $platform;
                $this->setAttribute($attribute, 1);
            }
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    //认证page_name
    public function requiredPageName($attribute, $params){
        if(!ctype_alnum($this->page_name)){
            $this->addError($attribute, '名称必须是字母与数字组成');
        }

        if(!empty($this->platforms) && is_array($this->platforms)) {
            foreach ($this->platforms as $platform) {
                $platform_field = 'platform_' . $platform;

                $where = ['and'];
                $where[] = ['=', 'page_name', $this->page_name];
                $where[] = ['=', $platform_field, 1];

                if(!empty($this->id))
                    $where[] = ['<>', 'id', $this->id];

                if(WebSeo::find()->where($where)->count('id')) {
                    $platform_name = OrderFromEnum::getValue($platform);
                    $this->addError($attribute, sprintf('%s已经有设置%s页', $platform_name, $this->page_name));
                    return;
                }
            }
        }
    }


    /**
     * 语言扩展表
     * @return \common\models\goods\AttributeLang
     */
    public function langModel()
    {
        return new WebSeoLang();
    }

    public function getLangs()
    {
        return $this->hasMany(WebSeoLang::class,['master_id'=>'id']);
    }

    /**
     * 关联语言一对一
     * @param string $languge
     * @return \yii\db\ActiveQuery
     */
    public function getLang()
    {
        $query = $this->hasOne(WebSeoLang::class, ['master_id'=>'id']);
        return $query;
    }
}
