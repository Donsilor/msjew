<?php

namespace console\controllers;

use common\enums\DeliveryStatusEnum;
use common\enums\OrderStatusEnum;
use common\models\order\Order;
use expresses\k5\ApiService;
use yii\console\Controller;

/**
 *
 * Class k5Controller
 * @package console\controllers
 */
class K5Controller extends Controller
{
    /**
     * @var ApiService
     */
    private $api;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $this->api = new ApiService();
    }

    public function actionIndex()
    {
        $a = microtime();
        $this->actionSync();
        $b = microtime();
        var_dump($b-$a);
    }

    public function actionSync()
    {
        static $startId = 0;
        $limit = 10;

        //获取待发货列表
        $list = $this->getList($startId, $limit);

        if (!$list) {
            return;
        }

        //获取查询数据参数
        $params = [];
        foreach ($list as $order) {
            $params[] = [
                'customerNumber' => $order['order_sn']
            ];
            //更新开始的ID
            $startId = $order['id'] > $startId ? $order['id'] : $startId;
        }

        //查询结果
        $result = $this->api->searchOrderTracknumber(['OrderType' => 1, 'CorpBillidDatas' => $params]);

        if ($result['statusCode'] == 'success' && isset($result['returnDatas']) && is_array($result['returnDatas'])) {
            //查询结果处理
            $customerNumbers = [];
            foreach ($result['returnDatas'] as $returnData) {
                if ($returnData['statusCode'] == 'error') {
                    continue;
                }

                $customerNumbers[$returnData['customerNumber']] = $returnData['trackNumber'];
            }

            //更新结果
            if (!empty($customerNumbers)) {
                foreach ($list as $order) {
                    $expressNo = $customerNumbers[$order['order_sn']] ?? null;

                    if($expressNo) {
                        $data = [
                            'express_id' => 4,
                            'express_no' => $expressNo,
                            'delivery_time' => time(),
                            'delivery_status' => DeliveryStatusEnum::SEND,
                            'order_status' => OrderStatusEnum::ORDER_SEND,
                        ];

                        $where = [];
                        $where['id'] = $order['id'];
                        $where['order_status'] = OrderStatusEnum::ORDER_CONFIRM;

                        $result = Order::updateAll($data, $where);
                    }
                }
            }
        }

        $this->actionSync();
    }

    /**
     * @param $startId
     * @param int $limit
     * @return array
     */
    public function getList($startId, $limit = 10)
    {
        $where = ['and'];
        $where[] = ['=', 'order_status', OrderStatusEnum::ORDER_CONFIRM];
        $where[] = ['>', 'id', $startId];

        return Order::find()->where($where)->limit($limit)->all();
    }

}